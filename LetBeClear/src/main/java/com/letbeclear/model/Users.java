package com.letbeclear.model;
// Generated Feb 5, 2018 1:20:43 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "letbeclear")
public class Users implements java.io.Serializable {

	private Long userId;
	private String registertype;
	private String profiletype;
	private String languageId;
	private Date registration;
	private Date lastsession;
	private Date registrationupdate;
	private Integer field1;
	private String field2;
	private Date field3;
	private Set<PostLike> postLikes = new HashSet<PostLike>(0);
	private Set<UserPost> userPosts = new HashSet<UserPost>(0);
	private Set<PostLike> postLikes_1 = new HashSet<PostLike>(0);
	private UserProfile userProfile;
	private Set<PostComment> postComments = new HashSet<PostComment>(0);
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<CommentsLike> commentsLikes = new HashSet<CommentsLike>(0);
	private Set<CommentsLike> commentsLikes_1 = new HashSet<CommentsLike>(0);
	private UserReg userReg;
	private Set<Address> addresses_1 = new HashSet<Address>(0);
	private Set<UserPost> userPosts_1 = new HashSet<UserPost>(0);

	public Users() {
	}

	public Users(Date registration, Date lastsession, Date registrationupdate, Date field3) {
		this.registration = registration;
		this.lastsession = lastsession;
		this.registrationupdate = registrationupdate;
		this.field3 = field3;
	}

	public Users(String registertype, String profiletype, String languageId, Date registration, Date lastsession,
			Date registrationupdate, Integer field1, String field2, Date field3, Set<PostLike> postLikes,
			Set<UserPost> userPosts, Set<PostLike> postLikes_1, UserProfile userProfile, Set<PostComment> postComments,
			Set<Address> addresses, Set<CommentsLike> commentsLikes, Set<CommentsLike> commentsLikes_1, UserReg userReg,
			Set<Address> addresses_1, Set<UserPost> userPosts_1) {
		this.registertype = registertype;
		this.profiletype = profiletype;
		this.languageId = languageId;
		this.registration = registration;
		this.lastsession = lastsession;
		this.registrationupdate = registrationupdate;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.postLikes = postLikes;
		this.userPosts = userPosts;
		this.postLikes_1 = postLikes_1;
		this.userProfile = userProfile;
		this.postComments = postComments;
		this.addresses = addresses;
		this.commentsLikes = commentsLikes;
		this.commentsLikes_1 = commentsLikes_1;
		this.userReg = userReg;
		this.addresses_1 = addresses_1;
		this.userPosts_1 = userPosts_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "USER_ID", unique = true, nullable = false)
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Column(name = "REGISTERTYPE", length = 4)
	public String getRegistertype() {
		return this.registertype;
	}

	public void setRegistertype(String registertype) {
		this.registertype = registertype;
	}

	@Column(name = "PROFILETYPE", length = 4)
	public String getProfiletype() {
		return this.profiletype;
	}

	public void setProfiletype(String profiletype) {
		this.profiletype = profiletype;
	}

	@Column(name = "LANGUAGE_ID", length = 4)
	public String getLanguageId() {
		return this.languageId;
	}

	public void setLanguageId(String languageId) {
		this.languageId = languageId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "REGISTRATION", nullable = false, length = 19)
	public Date getRegistration() {
		return this.registration;
	}

	public void setRegistration(Date registration) {
		this.registration = registration;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LASTSESSION", nullable = false, length = 19)
	public Date getLastsession() {
		return this.lastsession;
	}

	public void setLastsession(Date lastsession) {
		this.lastsession = lastsession;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "REGISTRATIONUPDATE", nullable = false, length = 19)
	public Date getRegistrationupdate() {
		return this.registrationupdate;
	}

	public void setRegistrationupdate(Date registrationupdate) {
		this.registrationupdate = registrationupdate;
	}

	@Column(name = "FIELD1")
	public Integer getField1() {
		return this.field1;
	}

	public void setField1(Integer field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2", length = 256)
	public String getField2() {
		return this.field2;
	}

	public void setField2(String field2) {
		this.field2 = field2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FIELD3", nullable = false, length = 19)
	public Date getField3() {
		return this.field3;
	}

	public void setField3(Date field3) {
		this.field3 = field3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PostLike> getPostLikes() {
		return this.postLikes;
	}

	public void setPostLikes(Set<PostLike> postLikes) {
		this.postLikes = postLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserPost> getUserPosts() {
		return this.userPosts;
	}

	public void setUserPosts(Set<UserPost> userPosts) {
		this.userPosts = userPosts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PostLike> getPostLikes_1() {
		return this.postLikes_1;
	}

	public void setPostLikes_1(Set<PostLike> postLikes_1) {
		this.postLikes_1 = postLikes_1;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PostComment> getPostComments() {
		return this.postComments;
	}

	public void setPostComments(Set<PostComment> postComments) {
		this.postComments = postComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CommentsLike> getCommentsLikes() {
		return this.commentsLikes;
	}

	public void setCommentsLikes(Set<CommentsLike> commentsLikes) {
		this.commentsLikes = commentsLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CommentsLike> getCommentsLikes_1() {
		return this.commentsLikes_1;
	}

	public void setCommentsLikes_1(Set<CommentsLike> commentsLikes_1) {
		this.commentsLikes_1 = commentsLikes_1;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserReg getUserReg() {
		return this.userReg;
	}

	public void setUserReg(UserReg userReg) {
		this.userReg = userReg;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Address> getAddresses_1() {
		return this.addresses_1;
	}

	public void setAddresses_1(Set<Address> addresses_1) {
		this.addresses_1 = addresses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserPost> getUserPosts_1() {
		return this.userPosts_1;
	}

	public void setUserPosts_1(Set<UserPost> userPosts_1) {
		this.userPosts_1 = userPosts_1;
	}

}
